@model diplom.Models.Share

@{
    ViewData["Title"] = "Details";
}

<h1>@Html.DisplayFor(model => model.Name)</h1>
<div class="row">
    <button id="changeChartType_b">Change chart type</button>
    <div class="card sale-card">
        <div class="card-block">
            <div id="chart_div" style="height:300px; margin-bottom: 20px; display: inline-block; min-width: 1570px;"></div>
        </div>
    </div>
</div>

<script type="text/javascript">
    const changeChartTypeButton = document.getElementById('changeChartType_b');
    currentChartType = ChartTypes.TREND;
    changeChartTypeButton.addEventListener("click", () => {
	    switch(currentChartType) {
            case ChartTypes.CANDLES:
                currentChartType = ChartTypes.TREND;
                google.charts.load('current', {'packages':['corechart'], 'language': 'ru'});
                google.charts.setOnLoadCallback(drawChart(currentChartType));
                break;
            case ChartTypes.TREND:
                currentChartType = ChartTypes.CANDLES;
                google.charts.load('current', {'packages':['corechart'], 'language': 'ru'});
                google.charts.setOnLoadCallback(drawChart(currentChartType));
                break;
            default:
                currentChartType = ChartTypes.CANDLES;
                google.charts.load('current', {'packages':['corechart'], 'language': 'ru'});
                google.charts.setOnLoadCallback(drawChart(currentChartType));
                break;
        }
    });
    var currentShareId = window.location.href.split('/')[5];
    google.charts.load('current', {'packages':['corechart'], 'language': 'ru'});
    google.charts.setOnLoadCallback(drawChart(currentChartType));

    function drawChart(currentChartType) {
        $.ajax({
            type: "GET",
            url: '/api/share/candles',  
            data: {
                currentChartType: currentChartType,
                share: currentShareId
            },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (json) {
                var data = [];
                var candles = json[0][0][1];
                console.log(json[0][0][1][0]);
                for (var i = 0; i < candles.length; i++) {
                    let row = [];
                    row.push(new Date(candles[i].Date));
                    row.push(candles[i].Close);
                    if (currentChartType == ChartTypes.CANDLES) {
                        row.push(candles[i].Open);
                        row.push(candles[i].Low);
                        row.push(candles[i].High);
                    }

                    data.push(row);
                }
                var chart_data = google.visualization.arrayToDataTable(data, true);

                var options = {
                    legend: 'none',
                    explorer: {
                        axis: 'horizontal',
                        keepInBounds: true,
                        maxZoomIn: .005,
                        maxZoomOut: 1.1
                    }
                };
                    
                if (currentChartType == ChartTypes.CANDLES) {
                    var chart = new google.visualization.CandlestickChart(document.getElementById('chart_div'));
                } else {
                    var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
                }
                chart.draw(chart_data, options);
            },
        });
    }
</script>

<div>
    <h4>Share</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Figi)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Figi)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Ticker)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Ticker)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ClassCode)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ClassCode)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Currency)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Currency)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IpoDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IpoDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IssueSize)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IssueSize)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IssuePlanSize)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IssuePlanSize)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ShareType)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ShareType)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
